<?php

class Stack
{
    private array $items;   //массив для хранения данных стека
    private int $top = -1;  //хранит индекс вершины стека (потому что нельзя пользоваться функциями для работы с массивами - поэтому последний иднекс нужно помнить) – к примеру, вместо реального удаления просто уменьшается индекс вершины стека и кажется, что элемент удален.

    public function push($data)
    {
        /*
         * сначала увеличиваем индекс вершини на единицу(++$this->top),
         * а потом добавляем элемент в вершину стека (по этому новому индексу)
         * – преинкремент возвращает уже новое значение*/
        $this->items[ ++$this->top ] = $data;
    }

    public function pop() :mixed
    {
        if($this->top == -1)  //если последний элемент уже был удален - возвращаем null
            return null;

        /*
        * возвращаем удаляемый элемент (последний элемент стека),
        * а потом уменьшаем индекс вершины стека ($this→top--)
        * - постинкремент возвращает старое значение
        * */
        return $this->items[ $this->top-- ];
    }

    public function peek() :mixed
    {
        return $this->items[$this->top] ?? null;  //просто возвращаем последний элемент
    }

    public function isEmpty() :bool
    {
        /*
         * поскольку операции работы с массивами недоступны, единственное, что мы можем
         * - это проверить индекс вершины стека
        **/
        return $this->top == -1;
    }
}

function reverse($str) :string
{
    $i = 0;
    $stack = new Stack();

    while( $str[$i] != null )
        $stack->push( $str[$i++] );

    $temp = '';

    while ( !$stack->isEmpty() )
        $temp .= $stack->pop();

    return $temp;
}